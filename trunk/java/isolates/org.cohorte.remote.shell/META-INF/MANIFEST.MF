Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Shell
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.cohorte.remote.shell
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.apache.felix.service.command;s
 tatus=provisional;version=0.10.0, org.cohorte.shell;version=1.0.0, or
 g.osgi.framework, org.osgi.service.cm;version=1.2, org.osgi.service.l
 og;version=1.3.0, org.osgi.util.tracker;version=1.5.0, org.psem2m.iso
 lates.base;version=1.0.1, org.psem2m.isolates.constants;version=1.0.1
 , org.psem2m.isolates.loggers, org.psem2m.utilities.logging;version=1
 .0.0
iPOJO-Components: component { $classname="org.cohorte.remote.shell.Rem
 oteShellService" $name="cohorte-remote-shell-factory" $public="true" 
 provides { $specifications="{org.cohorte.shell.IRemoteShell}" propert
 y { $name="osgi.shell.telnet.ip" $field="pAddress" $value="127.0.0.1"
  }property { $name="osgi.shell.telnet.port" $field="pPort" $value="0"
  }}requires { $field="pCommandProcessor" }requires { $field="pLogger"
  }callback { $transition="invalidate" $method="invalidate" }callback 
 { $transition="validate" $method="validate" }manipulation { interface
  { $name="org.cohorte.shell.IRemoteShell" }field { $name="pAddress" $
 type="java.lang.String" }field { $name="pCommandProcessor" $type="org
 .apache.felix.service.command.CommandProcessor" }field { $name="pCont
 ext" $type="org.osgi.framework.BundleContext" }field { $name="pLogger
 " $type="org.psem2m.isolates.base.IIsolateLoggerSvc" }field { $name="
 pPort" $type="int" }field { $name="pServer" $type="org.cohorte.remote
 .shell.Server" }method { $name="createGogoSession" $return="org.apach
 e.felix.service.command.CommandSession" $arguments="{java.io.InputStr
 eam,java.io.PrintStream,java.io.PrintStream}" }method { $name="error"
  $arguments="{java.lang.String,java.lang.Object[]}" }method { $name="
 getAddress" $return="java.lang.String" }method { $name="getPort" $ret
 urn="int" }method { $name="invalidate" }method { $name="stopServer" }
 method { $name="validate" }method { $name="warning" $arguments="{java
 .lang.String,java.lang.Object[]}" }}}

