Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Isolate Agent
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.isolates.slave.agent
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Export-Package: org.psem2m.isolates.slave.agent
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.osgi.framework;version=1.3.0, 
 org.osgi.framework.wiring;version=1.0.0, org.osgi.service.cm;version=
 1.2, org.osgi.service.log;version=1.3, org.psem2m.isolates.base;versi
 on=1.0.0, org.psem2m.isolates.base.activators;version=1.0.0, org.psem
 2m.isolates.base.bundles;version=1.0.0, org.psem2m.isolates.constants
 ;version=1.0.0, org.psem2m.isolates.services.dirs;version=1.0.0, org.
 psem2m.isolates.services.monitoring;version=1.0.0, org.psem2m.signals
 ;version=1.0.0, org.psem2m.utilities.logging;version=1.0.0
iPOJO-Components: component { $name="psem2m-slave-agent-core-factory" 
 $classname="org.psem2m.isolates.slave.agent.core.AgentCore" provides 
 { $specifications="{org.psem2m.isolates.slave.agent.ISvcAgent}" }requ
 ires { $field="pLogger" }requires { $field="pPlatformDirs" }requires 
 { $field="pSender" }requires { $field="pSignalReceiver" }callback { $
 transition="invalidate" $method="invalidate" }callback { $transition=
 "validate" $method="validate" }manipulation { interface { $name="org.
 psem2m.isolates.slave.agent.ISvcAgent" }interface { $name="org.psem2m
 .signals.ISignalListener" }interface { $name="org.osgi.framework.Bund
 leListener" }field { $name="pContext" $type="org.osgi.framework.Bundl
 eContext" }field { $name="pCriticalSection" $type="java.util.concurre
 nt.atomic.AtomicBoolean" }field { $name="pLogger" $type="org.psem2m.i
 solates.base.IIsolateLoggerSvc" }field { $name="pPlatformDirs" $type=
 "org.psem2m.isolates.services.dirs.IPlatformDirsSvc" }field { $name="
 pScheduler" $type="java.util.concurrent.ScheduledExecutorService" }fi
 eld { $name="pSender" $type="org.psem2m.signals.ISignalBroadcaster" }
 field { $name="pSignalReceiver" $type="org.psem2m.signals.ISignalRece
 iver" }field { $name="pUpdateTimeouts" $type="java.util.Map" }method 
 { $name="bundleChanged" $arguments="{org.osgi.framework.BundleEvent}"
  }method { $name="cancelTimeout" $arguments="{long}" }method { $name=
 "getBundleInfo" $return="org.psem2m.isolates.base.bundles.BundleInfo"
  $arguments="{long}" }method { $name="getBundlesState" $return="org.p
 sem2m.isolates.base.bundles.BundleInfo[]" }method { $name="handleRece
 ivedSignal" $return="java.lang.Object" $arguments="{java.lang.String,
 org.psem2m.signals.ISignalData}" }method { $name="installBundle" $ret
 urn="long" $arguments="{java.lang.String}" }method { $name="invalidat
 e" }method { $name="isFragment" $return="boolean" $arguments="{org.os
 gi.framework.Bundle}" }method { $name="killIsolate" }method { $name="
 refreshPackages" $return="boolean" $arguments="{long[]}" }method { $n
 ame="startBundle" $return="boolean" $arguments="{long}" }method { $na
 me="stopBundle" $return="boolean" $arguments="{long}" }method { $name
 ="uninstallBundle" $return="boolean" $arguments="{long}" }method { $n
 ame="updateBundle" $return="boolean" $arguments="{long}" }method { $n
 ame="validate" }}}component { $name="psem2m-threads-monitor-factory" 
 $classname="org.psem2m.isolates.slave.agent.threads.ThreadsMonitor" r
 equires { $field="pLogger" }requires { $field="pMonitor" }callback { 
 $transition="invalidate" $method="invalidatePojo" }callback { $transi
 tion="validate" $method="validatePojo" }manipulation { field { $name=
 "pLogger" $type="org.psem2m.isolates.base.IIsolateLoggerSvc" }field {
  $name="pMonitor" $type="org.psem2m.isolates.services.monitoring.IThr
 eadCpuUsageMonitor" }field { $name="pScheduledExecutor" $type="java.u
 til.concurrent.ScheduledExecutorService" }method { $name="enumerateTh
 readGroup" $arguments="{java.util.Map,java.lang.ThreadGroup}" }method
  { $name="findThreadStarter" $return="java.lang.String" $arguments="{
 java.lang.Thread}" }method { $name="getAllThreads" $return="java.util
 .Map" }method { $name="invalidatePojo" }method { $name="updateMonitor
 " }method { $name="validatePojo" }}}

