Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Isolate Agent
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.isolates.slave.agent
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Export-Package: org.psem2m.isolates.slave.agent
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.osgi.framework;version=1.3.0, 
 org.osgi.framework.wiring;version=1.0.0, org.osgi.service.cm;version=
 1.2, org.osgi.service.log;version=1.3, org.psem2m.isolates.base;versi
 on=1.0.0, org.psem2m.isolates.base.activators;version=1.0.0, org.psem
 2m.isolates.base.bundles;version=1.0.0, org.psem2m.isolates.constants
 ;version=1.0.0, org.psem2m.isolates.services.dirs;version=1.0.0, org.
 psem2m.isolates.services.monitoring;version=1.0.0, org.psem2m.signals
 ;version=1.0.0, org.psem2m.utilities.logging;version=1.0.0
iPOJO-Components: component { $name="psem2m-slave-agent-core-factory" 
 $classname="org.psem2m.isolates.slave.agent.core.AgentCore" provides 
 { $specifications="{org.psem2m.isolates.slave.agent.ISvcAgent}" }requ
 ires { $field="pLogger" }requires { $field="pPlatformDirs" }requires 
 { $field="pSignalReceiver" }callback { $transition="invalidate" $meth
 od="invalidate" }callback { $transition="validate" $method="validate"
  }manipulation { interface { $name="org.psem2m.isolates.slave.agent.I
 SvcAgent" }interface { $name="org.psem2m.signals.ISignalListener" }in
 terface { $name="org.osgi.framework.BundleListener" }field { $name="p
 Context" $type="org.osgi.framework.BundleContext" }field { $name="pCr
 iticalSection" $type="java.util.concurrent.atomic.AtomicBoolean" }fie
 ld { $name="pLogger" $type="org.psem2m.isolates.base.IIsolateLoggerSv
 c" }field { $name="pPlatformDirs" $type="org.psem2m.isolates.services
 .dirs.IPlatformDirsSvc" }field { $name="pScheduler" $type="java.util.
 concurrent.ScheduledExecutorService" }field { $name="pSignalReceiver"
  $type="org.psem2m.signals.ISignalReceiver" }field { $name="pUpdateTi
 meouts" $type="java.util.Map" }method { $name="bundleChanged" $argume
 nts="{org.osgi.framework.BundleEvent}" }method { $name="cancelTimeout
 " $arguments="{long}" }method { $name="getBundleInfo" $return="org.ps
 em2m.isolates.base.bundles.BundleInfo" $arguments="{long}" }method { 
 $name="getBundlesState" $return="org.psem2m.isolates.base.bundles.Bun
 dleInfo[]" }method { $name="handleReceivedSignal" $return="java.lang.
 Object" $arguments="{java.lang.String,org.psem2m.signals.ISignalData}
 " }method { $name="installBundle" $return="long" $arguments="{java.la
 ng.String}" }method { $name="invalidate" }method { $name="isFragment"
  $return="boolean" $arguments="{org.osgi.framework.Bundle}" }method {
  $name="killIsolate" }method { $name="refreshPackages" $return="boole
 an" $arguments="{long[]}" }method { $name="startBundle" $return="bool
 ean" $arguments="{long}" }method { $name="stopBundle" $return="boolea
 n" $arguments="{long}" }method { $name="uninstallBundle" $return="boo
 lean" $arguments="{long}" }method { $name="updateBundle" $return="boo
 lean" $arguments="{long}" }method { $name="validate" }}}component { $
 name="psem2m-threads-monitor-factory" $classname="org.psem2m.isolates
 .slave.agent.threads.ThreadsMonitor" requires { $field="pLogger" }req
 uires { $field="pMonitor" }callback { $transition="invalidate" $metho
 d="invalidatePojo" }callback { $transition="validate" $method="valida
 tePojo" }manipulation { field { $name="pLogger" $type="org.psem2m.iso
 lates.base.IIsolateLoggerSvc" }field { $name="pMonitor" $type="org.ps
 em2m.isolates.services.monitoring.IThreadCpuUsageMonitor" }field { $n
 ame="pScheduledExecutor" $type="java.util.concurrent.ScheduledExecuto
 rService" }method { $name="enumerateThreadGroup" $arguments="{java.ut
 il.Map,java.lang.ThreadGroup}" }method { $name="findThreadStarter" $r
 eturn="java.lang.String" $arguments="{java.lang.Thread}" }method { $n
 ame="getAllThreads" $return="java.util.Map" }method { $name="invalida
 tePojo" }method { $name="updateMonitor" }method { $name="validatePojo
 " }}}

