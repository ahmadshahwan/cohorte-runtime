Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Composer :: Core
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.cohorte.composer.core
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.cohorte.composer.api;version=1
 .0.0, org.cohorte.monitor.api;version=1.0.0, org.osgi.service.cm;vers
 ion=1.2, org.osgi.service.log;version=1.3, org.psem2m.signals;version
 =1.0.1
iPOJO-Components: component { $classname="org.cohorte.composer.impl.Ag
 entMonitor" $name="cohorte-composer-agent-monitor-factory" $public="t
 rue" requires { $field="pListeners" $optional="true" $id="agent-liste
 ners" }manipulation { interface { $name="org.psem2m.signals.ISignalLi
 stener" }field { $name="pListeners" $type="org.cohorte.composer.api.I
 AgentListener[]" }method { $name="handleReceivedSignal" $return="java
 .lang.Object" $arguments="{java.lang.String,org.psem2m.signals.ISigna
 lData}" }}}component { $classname="org.cohorte.composer.impl.Componen
 tRating" $name="cohorte-component-rating-factory" $public="true" prov
 ides { $specifications="{org.cohorte.composer.api.IComponentRating}" 
 }manipulation { interface { $name="org.cohorte.composer.api.IComponen
 tRating" }method { $name="load" $return="boolean" $arguments="{java.l
 ang.String}" }method { $name="store" $arguments="{java.lang.String}" 
 }method { $name="update" $arguments="{java.util.Map}" }}}component { 
 $classname="org.cohorte.composer.impl.ComposerCore" $name="cohorte-co
 mposer-core-factory" $public="true" provides { $specifications="{org.
 cohorte.composer.api.IComposer,org.cohorte.composer.api.IAgentListene
 r,org.cohorte.monitor.api.IIsolatePresenceListener}" }manipulation { 
 interface { $name="org.cohorte.composer.api.IComposer" }interface { $
 name="org.cohorte.composer.api.IAgentListener" }interface { $name="or
 g.cohorte.monitor.api.IIsolatePresenceListener" }method { $name="agen
 tGone" $arguments="{java.lang.String}" }method { $name="agentReady" $
 arguments="{java.lang.String}" }method { $name="componentGone" $argum
 ents="{java.lang.String,java.lang.String,java.lang.String}" }method {
  $name="componentInstantiated" $arguments="{java.lang.String,java.lan
 g.String,java.lang.String}" }method { $name="componentInvalidated" $a
 rguments="{java.lang.String,java.lang.String,java.lang.String}" }meth
 od { $name="componentValidated" $arguments="{java.lang.String,java.la
 ng.String,java.lang.String}" }method { $name="factoryGone" $arguments
 ="{java.lang.String,java.lang.String}" }method { $name="factoryReady"
  $arguments="{java.lang.String,java.lang.String}" }method { $name="ge
 tComposition" $return="java.util.Map" $arguments="{java.lang.String}"
  }method { $name="isolateLost" $arguments="{java.lang.String,java.lan
 g.String,java.lang.String}" }method { $name="isolateReady" $arguments
 ="{java.lang.String,java.lang.String,java.lang.String}" }method { $na
 me="load" $return="java.lang.String" $arguments="{java.util.Map}" }me
 thod { $name="unload" $return="boolean" $arguments="{java.lang.String
 }" }}}component { $classname="org.cohorte.composer.impl.ComposerRules
 " $name="cohorte-composer-rules-factory" $public="true" provides { $s
 pecifications="{org.cohorte.composer.api.IComposerRules}" }manipulati
 on { interface { $name="org.cohorte.composer.api.IComposerRules" }}}

