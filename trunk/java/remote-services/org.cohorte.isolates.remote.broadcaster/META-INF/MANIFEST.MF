Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Services :: Broadcaster
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.cohorte.remote.broadcaster
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.1.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version="1.8.0",
 org.apache.felix.ipojo.architecture;version="1.8.0",
 org.cohorte.remote;version="1.1.0",
 org.cohorte.remote.beans;version="1.1.0",
 org.osgi.framework;version="1.5.0",
 org.osgi.service.cm;version="1.2",
 org.osgi.service.log;version="1.3.0",
 org.psem2m.isolates.base;version="1.0.1",
 org.psem2m.isolates.constants;version="1.0.0",
 org.psem2m.isolates.services.dirs;version="1.0.1",
 org.psem2m.isolates.services.monitoring;version="1.0.1",
 org.psem2m.signals;version="1.0.0",
 org.psem2m.utilities.logging;version="1.0.0"
iPOJO-Components: component { $name="psem2m-remote-rsb-signals-factory
 " $classname="org.cohorte.remote.broadcaster.BroadcastSignalHandler" 
 provides { $specifications="{org.psem2m.isolates.services.monitoring.
 IIsolatePresenceListener}" }requires { $field="pDirectory" }requires 
 { $field="pLogger" }requires { $field="pPlatform" }requires { $field=
 "pRemoteEventsListeners" $optional="true" }requires { $field="pReposi
 tory" }requires { $field="pSignalEmitter" }requires { $field="pSignal
 Receiver" }callback { $transition="invalidate" $method="invalidatePoj
 o" }callback { $transition="validate" $method="validatePojo" }manipul
 ation { interface { $name="org.psem2m.signals.ISignalListener" }inter
 face { $name="org.psem2m.isolates.services.monitoring.IIsolatePresenc
 eListener" }field { $name="pDirectory" $type="org.psem2m.signals.ISig
 nalDirectory" }field { $name="pLogger" $type="org.psem2m.isolates.bas
 e.IIsolateLoggerSvc" }field { $name="pPlatform" $type="org.psem2m.iso
 lates.services.dirs.IPlatformDirsSvc" }field { $name="pRemoteEventsLi
 steners" $type="org.cohorte.remote.IRemoteServiceEventListener[]" }fi
 eld { $name="pRepository" $type="org.cohorte.remote.IRemoteServiceRep
 ository" }field { $name="pSignalEmitter" $type="org.psem2m.signals.IS
 ignalBroadcaster" }field { $name="pSignalReceiver" $type="org.psem2m.
 signals.ISignalReceiver" }method { $name="handleReceivedSignal" $retu
 rn="java.lang.Object" $arguments="{java.lang.String,org.psem2m.signal
 s.ISignalData}" }method { $name="handleRemoteEvent" $arguments="{org.
 cohorte.remote.beans.RemoteServiceEvent}" }method { $name="handleRequ
 estEndpoints" $return="org.cohorte.remote.beans.RemoteServiceEvent[]"
  $arguments="{java.lang.String}" }method { $name="invalidatePojo" }me
 thod { $name="isolateLost" $arguments="{java.lang.String,java.lang.St
 ring,java.lang.String}" }method { $name="isolateReady" $arguments="{j
 ava.lang.String,java.lang.String,java.lang.String}" }method { $name="
 validatePojo" }}}component { $name="psem2m-remote-rsb-factory" $class
 name="org.cohorte.remote.broadcaster.RemoteServiceBroadcaster" provid
 es { $specifications="{org.cohorte.remote.IRemoteServiceBroadcaster}"
  }requires { $field="pDirectory" }requires { $field="pLogger" }requir
 es { $field="pPlatform" }requires { $field="pSignalEmitter" }callback
  { $transition="invalidate" $method="invalidatePojo" }callback { $tra
 nsition="validate" $method="validatePojo" }manipulation { interface {
  $name="org.cohorte.remote.IRemoteServiceBroadcaster" }field { $name=
 "pDirectory" $type="org.psem2m.signals.ISignalDirectory" }field { $na
 me="pLogger" $type="org.psem2m.isolates.base.IIsolateLoggerSvc" }fiel
 d { $name="pPlatform" $type="org.psem2m.isolates.services.dirs.IPlatf
 ormDirsSvc" }field { $name="pSignalEmitter" $type="org.psem2m.signals
 .ISignalBroadcaster" }method { $name="getRemoteServiceEvents" $return
 ="java.util.Collection" $arguments="{java.lang.Object[]}" }method { $
 name="invalidatePojo" }method { $name="requestAllEndpoints" $return="
 org.cohorte.remote.beans.RemoteServiceEvent[]" }method { $name="reque
 stEndpoints" $return="org.cohorte.remote.beans.RemoteServiceEvent[]" 
 $arguments="{java.lang.String}" }method { $name="sendNotification" $a
 rguments="{org.cohorte.remote.beans.RemoteServiceEvent}" }method { $n
 ame="updateEndpointsHost" $arguments="{org.cohorte.remote.beans.Remot
 eServiceRegistration}" }method { $name="validatePojo" }}}

