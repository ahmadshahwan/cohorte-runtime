Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Services :: JSON-RPC
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.cohorte.remote.jsonrpc
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.1.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: javax.servlet;version=2.5.0, org.apache.felix.ipojo;ve
 rsion=1.8.0, org.apache.felix.ipojo.architecture;version=1.8.0, org.c
 ohorte.remote;version=1.1.0, org.cohorte.remote.beans;version=1.1.0, 
 org.cohorte.remote.utilities;version=1.0.0, org.jabsorb.ng, org.jabso
 rb.ng.client, org.json, org.osgi.framework;version=1.5.0, org.osgi.se
 rvice.cm;version=1.2, org.osgi.service.http;version=1.2.1, org.osgi.s
 ervice.log;version=1.3
iPOJO-Components: instance { $name="cohorte-remote-client-jsonrpc" $co
 mponent="cohorte-remote-client-jsonrpc-factory" }instance { $name="co
 horte-remote-endpoint-jsonrpc" $component="cohorte-remote-endpoint-js
 onrpc-factory" }component { $name="cohorte-remote-client-jsonrpc-fact
 ory" $classname="org.cohorte.remote.jsonrpc.JsonRpcClient" provides {
  $specifications="{org.cohorte.remote.IRemoteServiceClientHandler}" }
 requires { $field="pLogger" }callback { $transition="invalidate" $met
 hod="invalidatePojo" }callback { $transition="validate" $method="vali
 datePojo" }manipulation { $classname="org.cohorte.remote.jsonrpc.Json
 RpcClient" interface { $name="org.cohorte.remote.IRemoteServiceClient
 Handler" }field { $name="pBundleClasses" $type="java.util.Map" }field
  { $name="pBundleContext" $type="org.osgi.framework.BundleContext" }f
 ield { $name="pLogger" $type="org.osgi.service.log.LogService" }field
  { $name="pMissingClasses" $type="java.util.Map" }field { $name="pPro
 xies" $type="java.util.Map" }field { $name="pServiceIds" $type="java.
 util.Map" }method { $name="bundleStarted" $return="java.util.Collecti
 on" $arguments="{org.osgi.framework.Bundle}" $names="{aBundle}" }meth
 od { $name="bundleStopped" $return="java.util.Collection" $arguments=
 "{org.osgi.framework.Bundle}" $names="{aBundle}" }method { $name="cre
 ateProxy" $return="java.lang.Object" $arguments="{org.cohorte.remote.
 beans.EndpointDescription,java.lang.Class[]}" $names="{aEndpoint,aCla
 sses}" }method { $name="destroyProxy" $arguments="{java.lang.Object}"
  $names="{aProxy}" }method { $name="filterEndpoints" $return="org.coh
 orte.remote.beans.EndpointDescription" $arguments="{org.cohorte.remot
 e.beans.EndpointDescription[]}" $names="{aEndpoints}" }method { $name
 ="filterKnownInterfaces" $return="java.lang.Class[]" $arguments="{jav
 a.lang.String,java.util.Collection}" $names="{aServiceId,aInterfacesN
 ames}" }method { $name="getRemoteProxy" $return="java.lang.Object" $a
 rguments="{org.cohorte.remote.beans.RemoteServiceRegistration,java.ut
 il.Collection}" $names="{aRegistration,aFilteredInterfaces}" }method 
 { $name="invalidatePojo" }method { $name="validatePojo" }}}component 
 { $name="cohorte-remote-endpoint-jsonrpc-factory" $classname="org.coh
 orte.remote.jsonrpc.JsonRpcEndpoint" provides { $specifications="{org
 .cohorte.remote.IEndpointHandler}" }requires { $field="pHttpService" 
 $filter="(org.osgi.service.http.port=*)" $id="http.service" callback 
 { $method="bindHttpService" $type="bind" }}requires { $field="pLogger
 " }properties { property { $name="endpoint.servlet.name" $field="pSer
 vletName" $value="/JSON-RPC" }}callback { $transition="invalidate" $m
 ethod="invalidatePojo" }callback { $transition="validate" $method="va
 lidatePojo" }manipulation { $classname="org.cohorte.remote.jsonrpc.Js
 onRpcEndpoint" interface { $name="org.cohorte.remote.IEndpointHandler
 " }field { $name="pBundleContext" $type="org.osgi.framework.BundleCon
 text" }field { $name="pEndpointsDescriptions" $type="java.util.Map" }
 field { $name="pHttpPort" $type="int" }field { $name="pHttpService" $
 type="org.osgi.service.http.HttpService" }field { $name="pJsonRpcBrid
 ge" $type="org.jabsorb.ng.JSONRPCBridge" }field { $name="pLogger" $ty
 pe="org.osgi.service.log.LogService" }field { $name="pRegisteredEndpo
 ints" $type="java.util.List" }field { $name="pServletName" $type="jav
 a.lang.String" }method { $name="bindHttpService" $arguments="{org.osg
 i.service.http.HttpService,java.util.Map}" $names="{aHttpService,aSer
 viceProperties}" }method { $name="createEndpoint" $return="org.cohort
 e.remote.beans.EndpointDescription[]" $arguments="{java.util.Set,org.
 osgi.framework.ServiceReference}" $names="{aExportedInterfaces,aServi
 ceReference}" }method { $name="destroyEndpoint" $return="boolean" $ar
 guments="{org.osgi.framework.ServiceReference}" $names="{aServiceRefe
 rence}" }method { $name="generateEndpointName" $return="java.lang.Str
 ing" $arguments="{java.util.Map}" $names="{aServiceProperties}" }meth
 od { $name="getEndpoints" $return="org.cohorte.remote.beans.EndpointD
 escription[]" $arguments="{org.osgi.framework.ServiceReference}" $nam
 es="{aServiceReference}" }method { $name="getServicePropertiesMap" $r
 eturn="java.util.Map" $arguments="{org.osgi.framework.ServiceReferenc
 e}" $names="{aServiceReference}" }method { $name="invalidatePojo" }me
 thod { $name="makeEndpointUri" $return="java.lang.String" $arguments=
 "{java.lang.String}" $names="{aEndpointName}" }method { $name="startJ
 absorbBridge" }method { $name="stopJabsorbBridge" }method { $name="va
 lidatePojo" }}}

