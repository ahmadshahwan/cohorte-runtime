Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Services :: JSON-RPC
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.remote.jsonrpc
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: javax.servlet, org.apache.felix.ipojo;version=1.8.0, o
 rg.apache.felix.ipojo.architecture;version=1.8.0, org.cohorte.remote;
 version=1.1.0, org.cohorte.remote.beans;version=1.1.0, org.cohorte.re
 mote.utilities;version=1.0.0, org.jabsorb.ng, org.jabsorb.ng.client, 
 org.json, org.osgi.framework;version=1.5.0, org.osgi.service.cm;versi
 on=1.2, org.osgi.service.http;version=1.2.1, org.osgi.service.log;ver
 sion=1.3
iPOJO-Components: component { $name="psem2m-remote-client-jsonrpc-fact
 ory" $classname="org.cohorte.remote.jsonrpc.JsonRpcClient" provides {
  $specifications="{org.cohorte.remote.IRemoteServiceClientHandler}" }
 requires { $field="pLogger" }callback { $transition="invalidate" $met
 hod="invalidatePojo" }callback { $transition="validate" $method="vali
 datePojo" }manipulation { interface { $name="org.cohorte.remote.IRemo
 teServiceClientHandler" }field { $name="pBundleClasses" $type="java.u
 til.Map" }field { $name="pBundleContext" $type="org.osgi.framework.Bu
 ndleContext" }field { $name="pLogger" $type="org.osgi.service.log.Log
 Service" }field { $name="pMissingClasses" $type="java.util.Map" }fiel
 d { $name="pProxies" $type="java.util.Map" }field { $name="pServiceId
 s" $type="java.util.Map" }method { $name="bundleStarted" $return="jav
 a.util.Collection" $arguments="{org.osgi.framework.Bundle}" }method {
  $name="bundleStopped" $return="java.util.Collection" $arguments="{or
 g.osgi.framework.Bundle}" }method { $name="createProxy" $return="java
 .lang.Object" $arguments="{org.cohorte.remote.beans.EndpointDescripti
 on,java.lang.Class[]}" }method { $name="destroyProxy" $arguments="{ja
 va.lang.Object}" }method { $name="filterEndpoints" $return="org.cohor
 te.remote.beans.EndpointDescription" $arguments="{org.cohorte.remote.
 beans.EndpointDescription[]}" }method { $name="filterKnownInterfaces"
  $return="java.lang.Class[]" $arguments="{java.lang.String,java.util.
 Collection}" }method { $name="getRemoteProxy" $return="java.lang.Obje
 ct" $arguments="{org.cohorte.remote.beans.RemoteServiceRegistration,j
 ava.util.Collection}" }method { $name="invalidatePojo" }method { $nam
 e="validatePojo" }}}component { $name="psem2m-remote-endpoint-jsonrpc
 -factory" $classname="org.cohorte.remote.jsonrpc.JsonRpcEndpoint" pro
 vides { $specifications="{org.cohorte.remote.IEndpointHandler}" }requ
 ires { $field="pHttpService" $filter="(org.osgi.service.http.port=*)"
  $id="http.service" callback { $method="bindHttpService" $type="bind"
  }}requires { $field="pLogger" }properties { property { $name="endpoi
 nt.servlet.name" $field="pServletName" $value="/JSON-RPC" }}callback 
 { $transition="invalidate" $method="invalidatePojo" }callback { $tran
 sition="validate" $method="validatePojo" }manipulation { interface { 
 $name="org.cohorte.remote.IEndpointHandler" }field { $name="pBundleCo
 ntext" $type="org.osgi.framework.BundleContext" }field { $name="pEndp
 ointsDescriptions" $type="java.util.Map" }field { $name="pHttpPort" $
 type="int" }field { $name="pHttpService" $type="org.osgi.service.http
 .HttpService" }field { $name="pJsonRpcBridge" $type="org.jabsorb.ng.J
 SONRPCBridge" }field { $name="pLogger" $type="org.osgi.service.log.Lo
 gService" }field { $name="pRegisteredEndpoints" $type="java.util.List
 " }field { $name="pServletName" $type="java.lang.String" }method { $n
 ame="bindHttpService" $arguments="{org.osgi.service.http.HttpService,
 java.util.Map}" }method { $name="createEndpoint" $return="org.cohorte
 .remote.beans.EndpointDescription[]" $arguments="{java.util.Set,org.o
 sgi.framework.ServiceReference}" }method { $name="destroyEndpoint" $r
 eturn="boolean" $arguments="{org.osgi.framework.ServiceReference}" }m
 ethod { $name="generateEndpointName" $return="java.lang.String" $argu
 ments="{java.util.Map}" }method { $name="getEndpoints" $return="org.c
 ohorte.remote.beans.EndpointDescription[]" $arguments="{org.osgi.fram
 ework.ServiceReference}" }method { $name="getServicePropertiesMap" $r
 eturn="java.util.Map" $arguments="{org.osgi.framework.ServiceReferenc
 e}" }method { $name="invalidatePojo" }method { $name="makeEndpointUri
 " $return="java.lang.String" $arguments="{java.lang.String}" }method 
 { $name="startJabsorbBridge" }method { $name="stopJabsorbBridge" }met
 hod { $name="validatePojo" }}}

