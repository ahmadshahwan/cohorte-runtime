Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Services :: Signals Broadcaster
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.cohorte.remote.broadcast.signals
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.1.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.cohorte.remote;version=1.1.0, 
 org.cohorte.remote.beans;version=1.1.0, org.osgi.framework;version=1.
 5.0, org.osgi.service.cm;version=1.2, org.osgi.service.log;version=1.
 3.0, org.psem2m.isolates.base;version=1.0.1, org.psem2m.isolates.cons
 tants;version=1.0.0, org.psem2m.isolates.services.dirs;version=1.0.1,
  org.psem2m.isolates.services.monitoring;version=1.0.1, org.psem2m.si
 gnals;version=1.0.0, org.psem2m.utilities.logging;version=1.0.0
iPOJO-Components: instance { $name="cohorte-remote-broadcast-handler-s
 ignals" $component="cohorte-remote-broadcast-handler-signals-factory"
  }instance { $name="cohorte-remote-broadcast-notifier-signals" $compo
 nent="cohorte-remote-broadcast-notifier-signals-factory" }component {
  $name="cohorte-remote-broadcast-handler-signals-factory" $classname=
 "org.cohorte.remote.broadcaster.BroadcastSignalHandler" provides { $s
 pecifications="{org.psem2m.isolates.services.monitoring.IIsolatePrese
 nceListener}" }requires { $field="pDirectory" }requires { $field="pLo
 gger" }requires { $field="pPlatform" }requires { $field="pRemoteEvent
 sListeners" $optional="true" }requires { $field="pRepository" }requir
 es { $field="pSignalEmitter" }requires { $field="pSignalReceiver" }ca
 llback { $transition="invalidate" $method="invalidatePojo" }callback 
 { $transition="validate" $method="validatePojo" }manipulation { inter
 face { $name="org.psem2m.signals.ISignalListener" }interface { $name=
 "org.psem2m.isolates.services.monitoring.IIsolatePresenceListener" }f
 ield { $name="pDirectory" $type="org.psem2m.signals.ISignalDirectory"
  }field { $name="pLogger" $type="org.psem2m.isolates.base.IIsolateLog
 gerSvc" }field { $name="pPlatform" $type="org.psem2m.isolates.service
 s.dirs.IPlatformDirsSvc" }field { $name="pRemoteEventsListeners" $typ
 e="org.cohorte.remote.IRemoteServiceEventListener[]" }field { $name="
 pRepository" $type="org.cohorte.remote.IRemoteServiceRepository" }fie
 ld { $name="pSignalEmitter" $type="org.psem2m.signals.ISignalBroadcas
 ter" }field { $name="pSignalReceiver" $type="org.psem2m.signals.ISign
 alReceiver" }method { $name="handleReceivedSignal" $return="java.lang
 .Object" $arguments="{java.lang.String,org.psem2m.signals.ISignalData
 }" }method { $name="handleRemoteEvent" $arguments="{org.cohorte.remot
 e.beans.RemoteServiceEvent}" }method { $name="handleRequestEndpoints"
  $return="org.cohorte.remote.beans.RemoteServiceEvent[]" $arguments="
 {java.lang.String}" }method { $name="invalidatePojo" }method { $name=
 "isolateLost" $arguments="{java.lang.String,java.lang.String,java.lan
 g.String}" }method { $name="isolateReady" $arguments="{java.lang.Stri
 ng,java.lang.String,java.lang.String}" }method { $name="validatePojo"
  }}}component { $name="cohorte-remote-broadcast-notifier-signals-fact
 ory" $classname="org.cohorte.remote.broadcaster.RemoteServiceBroadcas
 ter" provides { $specifications="{org.cohorte.remote.IRemoteServiceBr
 oadcaster}" }requires { $field="pDirectory" }requires { $field="pLogg
 er" }requires { $field="pPlatform" }requires { $field="pSignalEmitter
 " }callback { $transition="invalidate" $method="invalidatePojo" }call
 back { $transition="validate" $method="validatePojo" }manipulation { 
 interface { $name="org.cohorte.remote.IRemoteServiceBroadcaster" }fie
 ld { $name="pDirectory" $type="org.psem2m.signals.ISignalDirectory" }
 field { $name="pLogger" $type="org.psem2m.isolates.base.IIsolateLogge
 rSvc" }field { $name="pPlatform" $type="org.psem2m.isolates.services.
 dirs.IPlatformDirsSvc" }field { $name="pSignalEmitter" $type="org.pse
 m2m.signals.ISignalBroadcaster" }method { $name="getRemoteServiceEven
 ts" $return="java.util.Collection" $arguments="{java.lang.Object[]}" 
 }method { $name="invalidatePojo" }method { $name="requestAllEndpoints
 " $return="org.cohorte.remote.beans.RemoteServiceEvent[]" }method { $
 name="requestEndpoints" $return="org.cohorte.remote.beans.RemoteServi
 ceEvent[]" $arguments="{java.lang.String}" }method { $name="sendNotif
 ication" $arguments="{org.cohorte.remote.beans.RemoteServiceEvent}" }
 method { $name="updateEndpointsHost" $arguments="{org.cohorte.remote.
 beans.RemoteServiceRegistration}" }method { $name="validatePojo" }}}

