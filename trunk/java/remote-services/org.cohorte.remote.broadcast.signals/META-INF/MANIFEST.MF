Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Services :: Signals Broadcaster
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.cohorte.remote.broadcast.signals
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.1.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.cohorte.remote;version=1.1.0, 
 org.cohorte.remote.beans;version=1.1.0, org.osgi.framework;version=1.
 5.0, org.osgi.service.cm;version=1.2, org.osgi.service.log;version=1.
 3.0, org.psem2m.isolates.base;version=1.0.1, org.psem2m.isolates.cons
 tants;version=1.0.0, org.psem2m.isolates.services.dirs;version=1.0.1,
  org.psem2m.isolates.services.monitoring;version=1.0.1, org.psem2m.si
 gnals;version=1.0.0, org.psem2m.utilities.logging;version=1.0.0
iPOJO-Components: instance { $name="cohorte-remote-broadcast-handler-s
 ignals" $component="cohorte-remote-broadcast-handler-signals-factory"
  }instance { $name="cohorte-remote-broadcast-notifier-signals" $compo
 nent="cohorte-remote-broadcast-notifier-signals-factory" }component {
  $name="cohorte-remote-broadcast-handler-signals-factory" $classname=
 "org.cohorte.remote.broadcaster.BroadcastSignalHandler" provides { $s
 pecifications="{IIsolatePresenceListener}" }requires { $field="pDirec
 tory" }requires { $field="pLogger" }requires { $field="pPlatform" }re
 quires { $field="pRemoteEventsListeners" $optional="true" }requires {
  $field="pRepository" }requires { $field="pSignalEmitter" }requires {
  $field="pSignalReceiver" }callback { $transition="invalidate" $metho
 d="invalidatePojo" }callback { $transition="validate" $method="valida
 tePojo" }manipulation { field { $name="pDirectory" $type="ISignalDire
 ctory" }field { $name="pLogger" $type="IIsolateLoggerSvc" }field { $n
 ame="pPlatform" $type="IPlatformDirsSvc" }field { $name="pRemoteEvent
 sListeners" $type="org.cohorte.remote.IRemoteServiceEventListener[]" 
 }field { $name="pRepository" $type="org.cohorte.remote.IRemoteService
 Repository" }field { $name="pSignalEmitter" $type="ISignalBroadcaster
 " }field { $name="pSignalReceiver" $type="ISignalReceiver" }method { 
 $name="handleReceivedSignal" $return="java.lang.Object" $arguments="{
 java.lang.String,ISignalData}" }method { $name="handleRemoteEvent" $a
 rguments="{org.cohorte.remote.beans.RemoteServiceEvent}" }method { $n
 ame="handleRequestEndpoints" $return="org.cohorte.remote.beans.Remote
 ServiceEvent[]" $arguments="{java.lang.String}" }method { $name="inva
 lidatePojo" }method { $name="isolateLost" $arguments="{java.lang.Stri
 ng,java.lang.String,java.lang.String}" }method { $name="isolateReady"
  $arguments="{java.lang.String,java.lang.String,java.lang.String}" }m
 ethod { $name="validatePojo" }}}component { $name="cohorte-remote-bro
 adcast-notifier-signals-factory" $classname="org.cohorte.remote.broad
 caster.RemoteServiceBroadcaster" provides { $specifications="{org.coh
 orte.remote.IRemoteServiceBroadcaster}" }requires { $field="pDirector
 y" }requires { $field="pLogger" }requires { $field="pPlatform" }requi
 res { $field="pSignalEmitter" }callback { $transition="invalidate" $m
 ethod="invalidatePojo" }callback { $transition="validate" $method="va
 lidatePojo" }manipulation { interface { $name="org.cohorte.remote.IRe
 moteServiceBroadcaster" }field { $name="pDirectory" $type="ISignalDir
 ectory" }field { $name="pLogger" $type="IIsolateLoggerSvc" }field { $
 name="pPlatform" $type="IPlatformDirsSvc" }field { $name="pSignalEmit
 ter" $type="ISignalBroadcaster" }method { $name="getRemoteServiceEven
 ts" $return="java.util.Collection" $arguments="{java.lang.Object[]}" 
 }method { $name="invalidatePojo" }method { $name="requestAllEndpoints
 " $return="org.cohorte.remote.beans.RemoteServiceEvent[]" }method { $
 name="requestEndpoints" $return="org.cohorte.remote.beans.RemoteServi
 ceEvent[]" $arguments="{java.lang.String}" }method { $name="sendNotif
 ication" $arguments="{org.cohorte.remote.beans.RemoteServiceEvent}" }
 method { $name="updateEndpointsHost" $arguments="{org.cohorte.remote.
 beans.RemoteServiceRegistration}" }method { $name="validatePojo" }}}

