Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Services :: Broadcaster
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.remote.broadcaster
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.cohorte.remote;version=1.0.0, 
 org.cohorte.remote.beans;version=1.0.0, org.osgi.framework;version=1.
 5.0, org.osgi.service.cm;version=1.2, org.osgi.service.log;version=1.
 3.0, org.psem2m.isolates.base;version=1.0.1, org.psem2m.isolates.base
 .activators;version=1.0.0, org.psem2m.isolates.constants;version=1.0.
 0, org.psem2m.isolates.services.dirs;version=1.0.1, org.psem2m.isolat
 es.services.monitoring;version=1.0.1, org.psem2m.signals;version=1.0.
 0, org.psem2m.utilities;version=1.0.0, org.psem2m.utilities.logging;v
 ersion=1.0.0
iPOJO-Components: component { $name="psem2m-remote-rsb-signals-factory
 " $classname="org.cohorte.remote.broadcaster.BroadcastSignalHandler" 
 provides { $specifications="{org.psem2m.isolates.services.monitoring.
 IIsolatePresenceListener}" }requires { $field="pDirectory" }requires 
 { $field="pLogger" }requires { $field="pPlatform" }requires { $field=
 "pRemoteEventsListeners" $optional="true" }requires { $field="pReposi
 tory" }requires { $field="pSignalEmitter" }requires { $field="pSignal
 Receiver" }callback { $transition="invalidate" $method="invalidatePoj
 o" }callback { $transition="validate" $method="validatePojo" }manipul
 ation { $super="org.psem2m.isolates.base.activators.CPojoBase" interf
 ace { $name="org.psem2m.signals.ISignalListener" }interface { $name="
 org.psem2m.isolates.services.monitoring.IIsolatePresenceListener" }fi
 eld { $name="pDirectory" $type="org.psem2m.signals.ISignalDirectory" 
 }field { $name="pLogger" $type="org.psem2m.isolates.base.IIsolateLogg
 erSvc" }field { $name="pPlatform" $type="org.psem2m.isolates.services
 .dirs.IPlatformDirsSvc" }field { $name="pRemoteEventsListeners" $type
 ="org.cohorte.remote.IRemoteServiceEventListener[]" }field { $name="p
 Repository" $type="org.cohorte.remote.IRemoteServiceRepository" }fiel
 d { $name="pSignalEmitter" $type="org.psem2m.signals.ISignalBroadcast
 er" }field { $name="pSignalReceiver" $type="org.psem2m.signals.ISigna
 lReceiver" }method { $name="handleReceivedSignal" $return="java.lang.
 Object" $arguments="{java.lang.String,org.psem2m.signals.ISignalData}
 " }method { $name="handleRemoteEvent" $arguments="{org.cohorte.remote
 .beans.RemoteServiceEvent}" }method { $name="handleRequestEndpoints" 
 $return="org.cohorte.remote.beans.RemoteServiceEvent[]" $arguments="{
 java.lang.String}" }method { $name="invalidatePojo" }method { $name="
 isolateLost" $arguments="{java.lang.String,java.lang.String,java.lang
 .String}" }method { $name="isolateReady" $arguments="{java.lang.Strin
 g,java.lang.String,java.lang.String}" }method { $name="validatePojo" 
 }}}component { $name="psem2m-remote-rsb-factory" $classname="org.coho
 rte.remote.broadcaster.RemoteServiceBroadcaster" provides { $specific
 ations="{org.cohorte.remote.IRemoteServiceBroadcaster}" }requires { $
 field="pDirectory" }requires { $field="pLogger" }requires { $field="p
 Platform" }requires { $field="pSignalEmitter" }callback { $transition
 ="invalidate" $method="invalidatePojo" }callback { $transition="valid
 ate" $method="validatePojo" }manipulation { $super="org.psem2m.isolat
 es.base.activators.CPojoBase" interface { $name="org.cohorte.remote.I
 RemoteServiceBroadcaster" }field { $name="pDirectory" $type="org.psem
 2m.signals.ISignalDirectory" }field { $name="pLogger" $type="org.psem
 2m.isolates.base.IIsolateLoggerSvc" }field { $name="pPlatform" $type=
 "org.psem2m.isolates.services.dirs.IPlatformDirsSvc" }field { $name="
 pSignalEmitter" $type="org.psem2m.signals.ISignalBroadcaster" }method
  { $name="getRemoteServiceEvents" $return="java.util.Collection" $arg
 uments="{java.lang.Object[]}" }method { $name="invalidatePojo" }metho
 d { $name="requestAllEndpoints" $return="org.cohorte.remote.beans.Rem
 oteServiceEvent[]" }method { $name="requestEndpoints" $return="org.co
 horte.remote.beans.RemoteServiceEvent[]" $arguments="{java.lang.Strin
 g}" }method { $name="sendNotification" $arguments="{org.cohorte.remot
 e.beans.RemoteServiceEvent}" }method { $name="updateEndpointsHost" $a
 rguments="{org.cohorte.remote.beans.RemoteServiceRegistration}" }meth
 od { $name="validatePojo" }}}

