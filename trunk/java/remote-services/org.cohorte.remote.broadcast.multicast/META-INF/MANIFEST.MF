Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Remote Services :: Multicast Broadcaster
Bundle-RequiredExecutionEnvironment: JavaSE-1.7
Bundle-SymbolicName: org.cohorte.remote.broadcast.multicast
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO 1.10.0
Import-Package: javax.servlet;version=2.5.0, javax.servlet.http;versio
 n=2.5.0, org.apache.felix.ipojo;version="[1.8.0,2.0.0)", org.apache.f
 elix.ipojo.architecture;version="[1.8.0,2.0.0)", org.cohorte.remote;v
 ersion=1.1.0, org.cohorte.remote.beans;version=1.1.0, org.cohorte.rem
 ote.utilities;version=1.0.0, org.json, org.osgi.framework;version=1.7
 .0, org.osgi.service.cm;version=1.2, org.osgi.service.http;version=1.
 2.0, org.osgi.service.log;version=1.3
iPOJO-Components: instance { $name="cohorte-remote-multicast" $compone
 nt="cohorte-remote-broadcast-multicast" }component { $name="cohorte-r
 emote-broadcast-multicast" $classname="org.cohorte.remote.multicast.M
 ulticastBroadcaster" provides { $specifications="{org.cohorte.remote.
 IRemoteServiceBroadcaster}" controller { $field="pServiceController" 
 }}requires { $field="pHttpService" $filter="(org.osgi.service.http.po
 rt=*)" $id="http.service" callback { $method="bindHttpService" $type=
 "bind" }}requires { $field="pLogger" }requires { $field="pRemoteEvent
 sListeners" $optional="true" }requires { $field="pRepository" }proper
 ties { property { $name="multicast.group" $field="pMulticastGroup" $v
 alue="239.0.0.1" }property { $name="multicast.port" $field="pMulticas
 tPort" $value="42000" }property { $name="servlet.path" $field="pServl
 etPath" $value="/pelix-dispatcher" }}callback { $transition="invalida
 te" $method="invalidate" }callback { $transition="validate" $method="
 validate" }manipulation { interface { $name="org.cohorte.remote.IRemo
 teServiceBroadcaster" }interface { $name="org.cohorte.remote.multicas
 t.utils.IPacketListener" }field { $name="pBundleContext" $type="org.o
 sgi.framework.BundleContext" }field { $name="pHttpPort" $type="int" }
 field { $name="pHttpService" $type="org.osgi.service.http.HttpService
 " }field { $name="pImportedEndpoints" $type="java.util.Map" }field { 
 $name="pIsolateUID" $type="java.lang.String" }field { $name="pLogger"
  $type="org.osgi.service.log.LogService" }field { $name="pMulticast" 
 $type="org.cohorte.remote.multicast.utils.MulticastHandler" }field { 
 $name="pMulticastGroup" $type="java.lang.String" }field { $name="pMul
 ticastPort" $type="int" }field { $name="pRemoteEventsListeners" $type
 ="org.cohorte.remote.IRemoteServiceEventListener[]" }field { $name="p
 Repository" $type="org.cohorte.remote.IRemoteServiceRepository" }fiel
 d { $name="pServiceController" $type="boolean" }field { $name="pServl
 et" $type="org.cohorte.remote.multicast.RegistryServlet" }field { $na
 me="pServletPath" $type="java.lang.String" }method { $name="bindHttpS
 ervice" $arguments="{org.osgi.service.http.HttpService,java.util.Map}
 " }method { $name="grabData" $return="java.lang.String" $arguments="{
 java.net.InetAddress,int,java.lang.String}" }method { $name="grabEndp
 oint" $return="org.cohorte.remote.beans.RemoteServiceRegistration" $a
 rguments="{java.net.InetAddress,int,java.lang.String,java.lang.String
 }" }method { $name="grabEndpoints" $return="java.util.List" $argument
 s="{java.net.InetAddress,int,java.lang.String}" }method { $name="hand
 leError" $return="boolean" $arguments="{java.lang.Exception}" }method
  { $name="handleEvent" $arguments="{org.cohorte.remote.multicast.bean
 s.PelixMulticastPacket,java.net.InetAddress,int}" }method { $name="ha
 ndleEventAdd" $arguments="{java.lang.String,org.cohorte.remote.multic
 ast.beans.PelixMulticastPacket,java.net.InetAddress}" }method { $name
 ="handleEventRemove" $arguments="{java.lang.String}" }method { $name=
 "handleEventUpdate" $arguments="{java.lang.String,org.cohorte.remote.
 multicast.beans.PelixMulticastPacket}" }method { $name="handlePacket"
  $arguments="{java.net.InetSocketAddress,byte[]}" }method { $name="in
 validate" }method { $name="requestAllEndpoints" $return="org.cohorte.
 remote.beans.RemoteServiceEvent[]" }method { $name="requestEndpoints"
  $return="org.cohorte.remote.beans.RemoteServiceEvent[]" $arguments="
 {java.lang.String}" }method { $name="sendDiscovered" $arguments="{jav
 a.net.InetAddress,int}" }method { $name="sendDiscovery" }method { $na
 me="sendNotification" $arguments="{org.cohorte.remote.beans.RemoteSer
 viceEvent}" }method { $name="sendPacket" $arguments="{java.util.Map}"
  }method { $name="sendPacket" $arguments="{java.util.Map,java.net.Ine
 tAddress,int}" }method { $name="validate" }}}

