Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Forkers Aggregator
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.forkers.aggregator
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.json, org.osgi.service.cm;vers
 ion=1.2, org.osgi.service.log;version=1.3, org.psem2m.forker;version=
 1.0.1, org.psem2m.isolates.base;version=1.0.1, org.psem2m.isolates.co
 nstants;version=1.0.1, org.psem2m.isolates.services.conf;version=1.0.
 1, org.psem2m.isolates.services.conf.beans;version=1.0.0, org.psem2m.
 isolates.services.dirs;version=1.0.1, org.psem2m.signals;version=1.0.
 1, org.psem2m.utilities;version=1.0.0, org.psem2m.utilities.logging;v
 ersion=1.0.0
iPOJO-Components: instance { $component="org.psem2m.forkers.aggregator
 .impl.ForkerAggregator" $name="psem2m-forker-aggregator" }component {
  $classname="org.psem2m.forkers.aggregator.impl.ForkerAggregator" $na
 me="psem2m-forker-aggregator-factory" $public="false" provides { $spe
 cifications="{org.psem2m.forker.IForker}" }requires { $field="pConfig
 " }requires { $field="pDirectory" }requires { $field="pListeners" $op
 tional="true" $id="forker-events-listeners" callback { $method="bindL
 istener" $type="bind" }}requires { $field="pLogger" }requires { $fiel
 d="pReceiver" $filter="(signal-receiver-online=true)" }requires { $fi
 eld="pSender" }callback { $transition="invalidate" $method="invalidat
 e" }callback { $transition="validate" $method="validate" }manipulatio
 n { interface { $name="org.psem2m.forker.IForker" }interface { $name=
 "org.psem2m.forkers.aggregator.impl.IPacketListener" }interface { $na
 me="java.lang.Runnable" }field { $name="pConfig" $type="org.psem2m.is
 olates.services.conf.ISvcConfig" }field { $name="pDirectory" $type="o
 rg.psem2m.signals.ISignalDirectory" }field { $name="pEventExecutor" $
 type="java.util.concurrent.ExecutorService" }field { $name="pForkersL
 ST" $type="java.util.Map" }field { $name="pIsolateForkers" $type="jav
 a.util.Map" }field { $name="pListeners" $type="org.psem2m.forker.IFor
 kerEventListener[]" }field { $name="pLogger" $type="org.psem2m.isolat
 es.base.IIsolateLoggerSvc" }field { $name="pMulticast" $type="org.pse
 m2m.forkers.aggregator.impl.MulticastReceiver" }field { $name="pRecei
 ver" $type="org.psem2m.signals.ISignalReceiver" }field { $name="pResu
 lts" $type="java.util.Map" }field { $name="pSender" $type="org.psem2m
 .signals.ISignalBroadcaster" }field { $name="pThread" $type="java.lan
 g.Thread" }field { $name="pThreadRunning" $type="boolean" }method { $
 name="bindListener" $arguments="{org.psem2m.forker.IForkerEventListen
 er}" }method { $name="extractString" $return="java.lang.String" $argu
 ments="{java.nio.ByteBuffer}" }method { $name="fireForkerEvent" $argu
 ments="{org.psem2m.forker.IForkerEventListener$EForkerEventType,java.
 lang.String,java.lang.String}" }method { $name="getForkerForNode" $re
 turn="java.lang.String" $arguments="{java.lang.String}" }method { $na
 me="getForkerIntResult" $return="int" $arguments="{java.lang.String,j
 ava.lang.String,java.lang.Object,long}" }method { $name="getNodeName"
  $return="java.lang.String" }method { $name="handleError" $return="bo
 olean" $arguments="{java.lang.Exception}" }method { $name="handleHear
 tBeat" $arguments="{java.lang.String,java.nio.ByteBuffer}" }method { 
 $name="handlePacket" $arguments="{java.net.DatagramPacket}" }method {
  $name="invalidate" }method { $name="isOnNode" $return="boolean" $arg
 uments="{java.lang.String,java.lang.String}" }method { $name="ping" $
 return="int" $arguments="{java.lang.String}" }method { $name="registe
 rForker" $arguments="{java.lang.String,java.lang.String,java.lang.Str
 ing,int}" }method { $name="run" }method { $name="sendContactSignal" $
 arguments="{java.lang.String,int}" }method { $name="setPlatformStoppi
 ng" }method { $name="startIsolate" $return="int" $arguments="{java.ut
 il.Map}" }method { $name="stopIsolate" $arguments="{java.lang.String}
 " }method { $name="unregisterForker" $arguments="{java.lang.String}" 
 }method { $name="validate" }}}

