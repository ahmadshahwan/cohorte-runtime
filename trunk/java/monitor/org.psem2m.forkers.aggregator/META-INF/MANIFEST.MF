Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Forkers Aggregator
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.forkers.aggregator
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.cohorte.monitor.api;version=1.
 0.0, org.json, org.osgi.service.cm;version=1.2, org.osgi.service.log;
 version=1.3, org.psem2m.forker;version=1.0.1, org.psem2m.isolates.bas
 e;version=1.0.1, org.psem2m.isolates.constants;version=1.0.1, org.pse
 m2m.isolates.services.conf;version=1.0.1, org.psem2m.isolates.service
 s.conf.beans;version=1.0.0, org.psem2m.isolates.services.dirs;version
 =1.0.1, org.psem2m.signals;version=1.0.1, org.psem2m.utilities;versio
 n=1.0.0, org.psem2m.utilities.logging;version=1.0.0
iPOJO-Components: instance { $component="org.psem2m.forkers.aggregator
 .impl.ForkerAggregator" $name="psem2m-forker-aggregator" }component {
  $classname="org.psem2m.forkers.aggregator.impl.ForkerAggregator" $na
 me="psem2m-forker-aggregator-factory" $public="false" provides { $spe
 cifications="{org.cohorte.monitor.api.IForkerAggregator}" }requires {
  $field="pConfig" }requires { $field="pDirectory" }requires { $field=
 "pListeners" $optional="true" $id="forker-events-listeners" callback 
 { $method="bindListener" $type="bind" }}requires { $field="pLogger" }
 requires { $field="pPlatform" }requires { $field="pReceiver" $filter=
 "(signal-receiver-online=true)" }requires { $field="pSender" }callbac
 k { $transition="invalidate" $method="invalidate" }callback { $transi
 tion="validate" $method="validate" }manipulation { interface { $name=
 "org.cohorte.monitor.api.IForkerAggregator" }interface { $name="org.p
 sem2m.forkers.aggregator.impl.IPacketListener" }interface { $name="ja
 va.lang.Runnable" }field { $name="pConfig" $type="org.psem2m.isolates
 .services.conf.ISvcConfig" }field { $name="pDirectory" $type="org.pse
 m2m.signals.ISignalDirectory" }field { $name="pEventExecutor" $type="
 java.util.concurrent.ExecutorService" }field { $name="pForkersLST" $t
 ype="java.util.Map" }field { $name="pIsolateForkers" $type="java.util
 .Map" }field { $name="pListeners" $type="org.cohorte.monitor.api.IFor
 kerPresenceListener[]" }field { $name="pLogger" $type="org.psem2m.iso
 lates.base.IIsolateLoggerSvc" }field { $name="pMulticast" $type="org.
 psem2m.forkers.aggregator.impl.MulticastReceiver" }field { $name="pPl
 atform" $type="org.psem2m.isolates.services.dirs.IPlatformDirsSvc" }f
 ield { $name="pReceiver" $type="org.psem2m.signals.ISignalReceiver" }
 field { $name="pResults" $type="java.util.Map" }field { $name="pSende
 r" $type="org.psem2m.signals.ISignalBroadcaster" }field { $name="pThr
 ead" $type="java.lang.Thread" }field { $name="pThreadRunning" $type="
 boolean" }method { $name="bindListener" $arguments="{org.cohorte.moni
 tor.api.IForkerPresenceListener}" }method { $name="extractString" $re
 turn="java.lang.String" $arguments="{java.nio.ByteBuffer}" }method { 
 $name="fireForkerEvent" $arguments="{java.lang.String,java.lang.Strin
 g,boolean}" }method { $name="getForker" $return="java.lang.String" $a
 rguments="{java.lang.String,java.lang.String}" }method { $name="getFo
 rkerIntResult" $return="int" $arguments="{java.lang.String,java.lang.
 String,java.lang.Object,long}" }method { $name="handleError" $return=
 "boolean" $arguments="{java.lang.Exception}" }method { $name="handleH
 eartBeat" $arguments="{java.lang.String,java.nio.ByteBuffer}" }method
  { $name="handlePacket" $arguments="{java.net.DatagramPacket}" }metho
 d { $name="invalidate" }method { $name="isAlive" $return="boolean" $a
 rguments="{java.lang.String}" }method { $name="registerForker" $argum
 ents="{java.lang.String,java.lang.String,java.lang.String,int}" }meth
 od { $name="run" }method { $name="sendContactSignal" $arguments="{jav
 a.lang.String,int}" }method { $name="setPlatformStopping" }method { $
 name="startIsolate" $return="int" $arguments="{java.lang.String,java.
 lang.String,java.lang.String,java.util.Map}" }method { $name="stopIso
 late" $return="boolean" $arguments="{java.lang.String}" }method { $na
 me="unregisterForker" $arguments="{java.lang.String}" }method { $name
 ="validate" }}}

