Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Signals :: Serializer :: JSON
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.signals.serializer.json
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.jabsorb.ng, org.jabsorb.ng.ser
 ializer, org.osgi.framework;version=1.5.0, org.osgi.service.cm;versio
 n=1.2, org.osgi.service.log;version=1.3, org.psem2m.isolates.base;ver
 sion=1.0.0, org.psem2m.isolates.base.activators;version=1.0.0, org.ps
 em2m.signals;version=1.0.0, org.psem2m.utilities;version=1.0.0, org.p
 sem2m.utilities.logging;version=1.0.0
iPOJO-Components: component { $classname="org.psem2m.signals.serialize
 r.json.JsonSignalSerializer" $name="psem2m-signals-data-json-factory"
  $public="true" provides { $specifications="{org.psem2m.signals.ISign
 alSerializer}" property { $name="psem2m.signals.serializer.priority" 
 $field="pSerializerPriority" $value="1000" $mandatory="true" }}requir
 es { $field="pLogger" $optional="true" }callback { $transition="inval
 idate" $method="invalidatePojo" }callback { $transition="validate" $m
 ethod="validatePojo" }manipulation { $super="org.psem2m.isolates.base
 .activators.CPojoBase" interface { $name="org.psem2m.signals.ISignalS
 erializer" }field { $name="pBundleContext" $type="org.osgi.framework.
 BundleContext" }field { $name="pLogger" $type="org.psem2m.isolates.ba
 se.IIsolateLoggerSvc" }field { $name="pSerializer" $type="org.jabsorb
 .ng.JSONSerializer" }field { $name="pSerializerPriority" $type="int" 
 }method { $name="canHandleType" $return="boolean" $arguments="{java.l
 ang.String}" }method { $name="canSerialize" $return="boolean" $argume
 nts="{java.lang.Object}" }method { $name="getContentType" $return="ja
 va.lang.String" }method { $name="getPriority" $return="int" }method {
  $name="invalidatePojo" }method { $name="serializeData" $return="byte
 []" $arguments="{java.lang.Object}" }method { $name="unserializeData"
  $return="java.lang.Object" $arguments="{byte[]}" }method { $name="va
 lidatePojo" }}}

