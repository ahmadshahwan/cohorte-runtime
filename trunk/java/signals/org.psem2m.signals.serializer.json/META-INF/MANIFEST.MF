Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Signals :: Serializer :: JSON
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.signals.serializer.json
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.jabsorb.ng, org.jabsorb.ng.ser
 ializer, org.osgi.framework;version=1.5.0, org.osgi.service.cm;versio
 n=1.2, org.osgi.service.log;version=1.3, org.psem2m.isolates.base;ver
 sion=1.0.0, org.psem2m.isolates.base.activators;version=1.0.0, org.ps
 em2m.signals;version=1.0.0, org.psem2m.utilities;version=1.0.0, org.p
 sem2m.utilities.logging;version=1.0.0
iPOJO-Components: component { $name="psem2m-signals-data-json-factory"
  $classname="org.psem2m.signals.serializer.json.JsonSignalSerializer"
  provides { $specifications="{org.psem2m.signals.ISignalSerializer}" 
 property { $name="psem2m.signals.serializer.priority" $field="pSerial
 izerPriority" $value="1000" $mandatory="true" }}requires { $field="pL
 ogger" $optional="true" }callback { $transition="invalidate" $method=
 "invalidatePojo" }callback { $transition="validate" $method="validate
 Pojo" }manipulation { $super="org.psem2m.isolates.base.activators.CPo
 joBase" interface { $name="org.psem2m.signals.ISignalSerializer" }fie
 ld { $name="pBundleContext" $type="org.osgi.framework.BundleContext" 
 }field { $name="pLogger" $type="org.psem2m.isolates.base.IIsolateLogg
 erSvc" }field { $name="pSerializer" $type="org.jabsorb.ng.JSONSeriali
 zer" }field { $name="pSerializerPriority" $type="int" }method { $name
 ="canHandleType" $return="boolean" $arguments="{java.lang.String}" }m
 ethod { $name="canSerialize" $return="boolean" $arguments="{java.lang
 .Object}" }method { $name="getContentType" $return="java.lang.String"
  }method { $name="getPriority" $return="int" }method { $name="invalid
 atePojo" }method { $name="serializeData" $return="byte[]" $arguments=
 "{java.lang.Object}" }method { $name="unserializeData" $return="java.
 lang.Object" $arguments="{byte[]}" }method { $name="validatePojo" }}}

