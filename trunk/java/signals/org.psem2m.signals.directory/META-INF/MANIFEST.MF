Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Signals :: Directory
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.signals.directory
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.osgi.framework;version=1.5.0, 
 org.osgi.service.cm;version=1.2, org.osgi.service.log;version=1.3, or
 g.psem2m.isolates.base;version=1.0.0, org.psem2m.isolates.base.activa
 tors;version=1.0.0, org.psem2m.isolates.constants;version=1.0.0, org.
 psem2m.isolates.services.conf;version=1.0.0, org.psem2m.isolates.serv
 ices.conf.beans;version=1.0.0, org.psem2m.isolates.services.monitorin
 g;version=1.0.1, org.psem2m.signals;version=1.0.0, org.psem2m.utiliti
 es;version=1.0.0, org.psem2m.utilities.logging;version=1.0.0
iPOJO-Components: instance { $component="org.psem2m.signals.directory.
 impl.DirectoryUpdater" $name="psem2m-signals-directory-updater" }inst
 ance { $component="org.psem2m.signals.directory.impl.SignalsDirectory
 " $name="psem2m-signals-directory" }component { $classname="org.psem2
 m.signals.directory.impl.DirectoryUpdater" $name="psem2m-signals-dire
 ctory-updater-factory" $public="false" requires { $field="pDirectory"
  }requires { $field="pLogger" }requires { $field="pReceiver" $filter=
 "(signal-receiver-online=true)" }requires { $field="pSender" $filter=
 "(signal-receiver-online=true)" }callback { $transition="invalidate" 
 $method="invalidate" }callback { $transition="validate" $method="vali
 date" }manipulation { interface { $name="org.psem2m.signals.ISignalLi
 stener" }interface { $name="org.psem2m.signals.IWaitingSignalListener
 " }field { $name="pDirectory" $type="org.psem2m.signals.ISignalDirect
 ory" }field { $name="pDumperPort" $type="int" }field { $name="pLogger
 " $type="org.psem2m.isolates.base.IIsolateLoggerSvc" }field { $name="
 pReceiver" $type="org.psem2m.signals.ISignalReceiver" }field { $name=
 "pSender" $type="org.psem2m.signals.ISignalBroadcaster" }method { $na
 me="grabRemoteDirectory" $arguments="{org.psem2m.signals.ISignalData}
 " }method { $name="handleDumpedDirectory" $arguments="{java.lang.Obje
 ct[],java.lang.String}" }method { $name="handleReceivedSignal" $retur
 n="java.lang.Object" $arguments="{java.lang.String,org.psem2m.signals
 .ISignalData}" }method { $name="invalidate" }method { $name="prepareR
 egistrationContent" $return="java.util.Map" $arguments="{boolean}" }m
 ethod { $name="registerIsolate" $arguments="{org.psem2m.signals.ISign
 alData}" }method { $name="sendRegistration" $arguments="{java.lang.St
 ring,int,boolean}" }method { $name="storeDirectory" $return="java.lan
 g.String[]" $arguments="{java.util.Map,java.lang.String}" }method { $
 name="validate" }method { $name="waitingSignalSent" $arguments="{org.
 psem2m.signals.IWaitingSignal}" }method { $name="waitingSignalTimeout
 " $arguments="{org.psem2m.signals.IWaitingSignal}" }}}component { $cl
 assname="org.psem2m.signals.directory.impl.SignalsDirectory" $name="p
 sem2m-signals-directory-factory" $public="false" provides { $specific
 ations="{org.psem2m.signals.ISignalDirectory}" }requires { $field="pL
 isteners" $optional="true" $id="isolate-presence-listeners" callback 
 { $method="bindPresenceListener" $type="bind" }}requires { $field="pL
 ogger" }callback { $transition="invalidate" $method="invalidatePojo" 
 }callback { $transition="validate" $method="validatePojo" }manipulati
 on { $super="org.psem2m.isolates.base.activators.CPojoBase" interface
  { $name="org.psem2m.signals.ISignalDirectory" }field { $name="pAcces
 ses" $type="java.util.Map" }field { $name="pCurrentIsolatePort" $type
 ="int" }field { $name="pGroups" $type="java.util.Map" }field { $name=
 "pListeners" $type="org.psem2m.isolates.services.monitoring.IIsolateP
 resenceListener[]" }field { $name="pLogger" $type="org.psem2m.isolate
 s.base.IIsolateLoggerSvc" }field { $name="pNodesHost" $type="java.uti
 l.Map" }field { $name="pNodesIsolates" $type="java.util.Map" }method 
 { $name="bindPresenceListener" $arguments="{org.psem2m.isolates.servi
 ces.monitoring.IIsolatePresenceListener}" }method { $name="dump" $ret
 urn="java.util.Map" }method { $name="getAllIsolates" $return="java.la
 ng.String[]" $arguments="{java.lang.String,boolean}" }method { $name=
 "getAllNodes" $return="java.lang.String[]" }method { $name="getGroupA
 ccesses" $return="java.util.Map" $arguments="{org.psem2m.signals.ISig
 nalDirectory$EBaseGroup}" }method { $name="getGroupAccesses" $return=
 "java.util.Map" $arguments="{java.lang.String}" }method { $name="getH
 ostForNode" $return="java.lang.String" $arguments="{java.lang.String}
 " }method { $name="getIsolateAccess" $return="org.psem2m.signals.Host
 Access" $arguments="{java.lang.String}" }method { $name="getIsolateId
 " $return="java.lang.String" }method { $name="getIsolateNode" $return
 ="java.lang.String" $arguments="{java.lang.String}" }method { $name="
 getIsolatesOnNode" $return="java.lang.String[]" $arguments="{java.lan
 g.String}" }method { $name="getLocalNode" $return="java.lang.String" 
 }method { $name="getMinimalCollection" $return="java.util.Collection"
  $arguments="{java.util.Collection,java.lang.String}" }method { $name
 ="invalidatePojo" }method { $name="isRegistered" $return="boolean" $a
 rguments="{java.lang.String}" }method { $name="notifyPresenceListener
 s" $arguments="{java.lang.String,java.lang.String,org.psem2m.isolates
 .services.monitoring.IIsolatePresenceListener$EPresence}" }method { $
 name="registerIsolate" $return="boolean" $arguments="{java.lang.Strin
 g,java.lang.String,int,java.lang.String[]}" }method { $name="register
 Local" $arguments="{int,java.lang.String[]}" }method { $name="setNode
 Address" $return="java.lang.String" $arguments="{java.lang.String,jav
 a.lang.String}" }method { $name="storeDump" $return="java.lang.String
 []" $arguments="{java.util.Map,java.util.Collection,java.util.Collect
 ion}" }method { $name="unregisterIsolate" $return="boolean" $argument
 s="{java.lang.String}" }method { $name="validatePojo" }}}

