Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M :: Signals Directory
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.signals.directory
Bundle-Vendor: isandlaTech.com
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.osgi.framework;version=1.5.0, 
 org.osgi.service.cm;version=1.2, org.osgi.service.log;version=1.3, or
 g.psem2m.isolates.base;version=1.0.0, org.psem2m.isolates.base.activa
 tors;version=1.0.0, org.psem2m.isolates.constants;version=1.0.0, org.
 psem2m.isolates.services.conf;version=1.0.0, org.psem2m.isolates.serv
 ices.conf.beans;version=1.0.0, org.psem2m.signals;version=1.0.0, org.
 psem2m.utilities;version=1.0.0, org.psem2m.utilities.logging;version=
 1.0.0
iPOJO-Components: instance { $component="org.psem2m.signals.directory.
 impl.DirectoryUpdater" $name="psem2m-signals-directory-updater" }inst
 ance { $component="org.psem2m.signals.directory.impl.SignalsDirectory
 " $name="psem2m-signals-directory" }component { $classname="org.psem2
 m.signals.directory.impl.DirectoryUpdater" $name="psem2m-signals-dire
 ctory-updater-factory" $public="false" requires { $field="pDirectory"
  }requires { $field="pLogger" }requires { $field="pReceiver" $filter=
 "(signal-receiver-online=true)" }requires { $field="pSender" $filter=
 "(signal-receiver-online=true)" }callback { $transition="invalidate" 
 $method="invalidate" }callback { $transition="validate" $method="vali
 date" }manipulation { interface { $name="org.psem2m.signals.ISignalLi
 stener" }interface { $name="org.psem2m.signals.IWaitingSignalListener
 " }field { $name="pDirectory" $type="org.psem2m.signals.ISignalDirect
 ory" }field { $name="pLogger" $type="org.psem2m.isolates.base.IIsolat
 eLoggerSvc" }field { $name="pReceiver" $type="org.psem2m.signals.ISig
 nalReceiver" }field { $name="pSender" $type="org.psem2m.signals.ISign
 alBroadcaster" }method { $name="handleDumpedDirectory" $arguments="{j
 ava.lang.Object[]}" }method { $name="handleReceivedSignal" $return="j
 ava.lang.Object" $arguments="{java.lang.String,org.psem2m.signals.ISi
 gnalData}" }method { $name="invalidate" }method { $name="sendRegistra
 tion" }method { $name="storeDirectory" $arguments="{java.util.Map}" }
 method { $name="validate" }method { $name="waitingSignalSent" $argume
 nts="{org.psem2m.signals.IWaitingSignal}" }method { $name="waitingSig
 nalTimeout" $arguments="{org.psem2m.signals.IWaitingSignal}" }}}compo
 nent { $classname="org.psem2m.signals.directory.impl.SignalsDirectory
 " $name="psem2m-signals-directory-factory" $public="false" provides {
  $specifications="{org.psem2m.signals.ISignalDirectory}" }requires { 
 $field="pLogger" }callback { $transition="invalidate" $method="invali
 datePojo" }callback { $transition="validate" $method="validatePojo" }
 manipulation { $super="org.psem2m.isolates.base.activators.CPojoBase"
  interface { $name="org.psem2m.signals.ISignalDirectory" }field { $na
 me="pAccesses" $type="java.util.Map" }field { $name="pGroups" $type="
 java.util.Map" }field { $name="pLogger" $type="org.psem2m.isolates.ba
 se.IIsolateLoggerSvc" }field { $name="pNodesHost" $type="java.util.Ma
 p" }field { $name="pNodesIsolates" $type="java.util.Map" }method { $n
 ame="dump" $return="java.util.Map" }method { $name="getAllIsolates" $
 return="java.lang.String[]" $arguments="{java.lang.String}" }method {
  $name="getGroupAccesses" $return="java.util.Map" $arguments="{java.l
 ang.String}" }method { $name="getHostForNode" $return="java.lang.Stri
 ng" $arguments="{java.lang.String}" }method { $name="getIsolateAccess
 " $return="org.psem2m.signals.HostAccess" $arguments="{java.lang.Stri
 ng}" }method { $name="getIsolateId" $return="java.lang.String" }metho
 d { $name="getIsolateNode" $return="java.lang.String" $arguments="{ja
 va.lang.String}" }method { $name="getIsolatesOnNode" $return="java.la
 ng.String[]" $arguments="{java.lang.String}" }method { $name="getLoca
 lNode" $return="java.lang.String" }method { $name="invalidatePojo" }m
 ethod { $name="isRegistered" $return="boolean" $arguments="{java.lang
 .String}" }method { $name="registerIsolate" $return="boolean" $argume
 nts="{java.lang.String,java.lang.String,int,java.lang.String[]}" }met
 hod { $name="registerLocal" $arguments="{int,java.lang.String[]}" }me
 thod { $name="setNodeAddress" $return="java.lang.String" $arguments="
 {java.lang.String,java.lang.String}" }method { $name="unregisterIsola
 te" $return="boolean" $arguments="{java.lang.String}" }method { $name
 ="validatePojo" }}}

