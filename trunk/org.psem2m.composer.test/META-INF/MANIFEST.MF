Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: PSEM2M - Composer Test
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Bundle-SymbolicName: org.psem2m.composer.test
Bundle-Version: 1.0.0.qualifier
Created-By: iPOJO  1.8.0
Import-Package: org.apache.felix.ipojo;version=1.8.0, org.apache.felix
 .ipojo.architecture;version=1.8.0, org.osgi.framework;version=1.5.0, 
 org.osgi.service.cm;version=1.2, org.osgi.service.log;version=1.3, or
 g.psem2m.composer.test.api, org.psem2m.isolates.base;version=1.0.0, o
 rg.psem2m.isolates.base.activators;version=1.0.0, org.psem2m.utilitie
 s;version=1.0.0, org.psem2m.utilities.logging;version=1.0.0
iPOJO-Components: component { $classname="org.psem2m.composer.core.tes
 t.HelloConsumerTest" $name="hello-consumer-test" $public="true" requi
 res { $field="pLogger" $id="logger" }requires { $field="pService" $id
 ="hello-svc" }callback { $transition="invalidate" $method="invalidate
 Pojo" }callback { $transition="validate" $method="validatePojo" }mani
 pulation { $super="org.psem2m.isolates.base.activators.CPojoBase" fie
 ld { $name="pLogger" $type="org.psem2m.isolates.base.IIsolateLoggerSv
 c" }field { $name="pService" $type="org.psem2m.composer.test.api.IHel
 loSvc" }method { $name="invalidatePojo" }method { $name="validatePojo
 " }}}component { $classname="org.psem2m.composer.core.test.HelloTest"
  $name="hello-test" $public="true" provides { $specifications="{org.p
 sem2m.composer.test.api.IHelloSvc}" }properties { property { $name="d
 efault-name" $field="pDefaultName" $value="World" }}requires { $field
 ="pLogger" $id="logger" }callback { $transition="invalidate" $method=
 "invalidatePojo" }callback { $transition="validate" $method="validate
 Pojo" }manipulation { $super="org.psem2m.isolates.base.activators.CPo
 joBase" interface { $name="org.psem2m.composer.test.api.IHelloSvc" }f
 ield { $name="pDefaultName" $type="java.lang.String" }field { $name="
 pLogger" $type="org.psem2m.isolates.base.IIsolateLoggerSvc" }method {
  $name="invalidatePojo" }method { $name="logHello" $arguments="{java.
 lang.String}" }method { $name="sayHello" $return="java.lang.String" $
 arguments="{java.lang.String}" }method { $name="validatePojo" }}}

